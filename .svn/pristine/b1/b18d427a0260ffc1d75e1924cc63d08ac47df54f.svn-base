package com.guide.controller;

import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.guide.pojo.NianHui;
import com.guide.pojo.NianHuiData;
import com.guide.service.NianHuiService;
import com.guide.utils.GlobalConstants;

@Controller
@RequestMapping("/")
public class UserController {
	SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
	SimpleDateFormat fmr = new SimpleDateFormat("MM-dd");
	DecimalFormat df = new DecimalFormat();
	// 处理业务逻辑的userService
	@Resource(name = "nianHuiService")
	private NianHuiService nianHuiService;
	@SuppressWarnings("unused")
	private Logger logger;

	public UserController() {
		this.logger = Logger.getLogger(UserController.class);
	}

	@RequestMapping(value = "validate", method = RequestMethod.GET, produces = "text/plain;charset=UTF-8")
	@ResponseBody
	public String change_pass(HttpServletRequest request, @RequestParam("val") String val) {
		System.err.println(val);
		List<NianHui> list = nianHuiService.query();
		System.err.println(list.toString());
		return list.toString();
	}
	
	@RequestMapping(value = "main", method = RequestMethod.GET, produces = "text/plain;charset=UTF-8")
	public String main(HttpServletRequest request) {
		return "main";
	}

	@RequestMapping(value = "submit", method = RequestMethod.GET, produces = "text/plain;charset=UTF-8")
	@ResponseBody
	public String submit(HttpServletRequest request, @RequestParam("val") String val) {
		HashMap<String, Integer> wish = new HashMap<String, Integer>();
		wish.put("有钱暴富", 0);
		wish.put("遇见那个ta", 0);
		wish.put("健身减肥", 0);
		wish.put("更美更帅", 0);
		wish.put("升职加薪", 0);
		wish.put("要宝宝", 0);
		wish.put("世界和平", 0);
		wish.put("嘿嘿嘿", 0);
		HashMap<String, Integer> map = new HashMap<String, Integer>();
		map.put("年度大会", 0);
		map.put("员工奉献奖", 0);
		map.put("微电影走秀", 0);
		map.put("微电影播映", 0);
		map.put("微电影颁奖", 0);
		map.put("晚宴走秀", 0);
		map.put("晚宴节目表演", 0);
		map.put("晚宴抽奖", 0);
		GlobalConstants.setML(map);
		GlobalConstants.setMN(map);
		GlobalConstants.setWN(map);
		GlobalConstants.setWL(map);
		GlobalConstants.setWish(wish);
		return GlobalConstants.getML().toString();
	}

	@RequestMapping(value = "show", method = RequestMethod.GET, produces = "text/plain;charset=UTF-8")
	public String show(HttpServletRequest request) {
		HashMap<String, Integer> map = new HashMap<String, Integer>();
		List<NianHui> list = nianHuiService.query();
		List<NianHuiData> list_bar_new = nianHuiService.query_new();
		List<NianHuiData> list_bar_last = nianHuiService.query_last();
		List<NianHui> list_cloud = nianHuiService.cloud();
		
		List<String> lenged = new ArrayList<String>();
		String mn = "";
		String ml = "";
		String wn = "";
		String wl = "";
		String wish_leng = "";
		for(String i:GlobalConstants.getML().keySet()){
			ml+=GlobalConstants.getML().get(i)+",";
		}
		for(String i:GlobalConstants.getMN().keySet()){
			mn+=GlobalConstants.getMN().get(i)+",";
		}
		for(String i:GlobalConstants.getWN().keySet()){
			wn+=GlobalConstants.getWN().get(i)+",";
		}
		for(String i:GlobalConstants.getWL().keySet()){
			wl+=GlobalConstants.getWL().get(i)+",";
		}
		//wish
		JSONArray wish = new JSONArray();
		for(String i:GlobalConstants.getWL().keySet()){
			JSONObject ww = new JSONObject();
			wish_leng += i+","; 
			ww.put("name", i);
			ww.put("value", GlobalConstants.getWL().get(i));
			wish.add(ww);
		}
		//cloud
		JSONArray cloud = new JSONArray();
		for(NianHui i:list_cloud){
			JSONObject cc = new JSONObject();
			cc.put("name", i.getZhao());
			cc.put("value", i.getCloud_count());
			cloud.add(cc);
		}
		request.setAttribute("mn", mn.substring(0,mn.length()-1));
		request.setAttribute("ml", ml.substring(0,ml.length()-1));
		request.setAttribute("wn", wn.substring(0,wn.length()-1));
		request.setAttribute("wl", wl.substring(0,wl.length()-1));
		request.setAttribute("wish_lenged", wish_leng.substring(0,wish_leng.length()-1));
		request.setAttribute("wish", wish.toJSONString());
		request.setAttribute("cloud", cloud.toJSONString());
		return "show";
	}

}
